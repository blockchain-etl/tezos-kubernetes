# Default values for Tezos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
terminationGracePeriodSeconds: 30
image:
  repository: tezos/tezos
  tag: v7-release
  pullPolicy: Always

service:
  rpcPortName: jsonrpc
  rpcPort: "8732"
  # port should be inside k8s node ports range
  p2pPort: "30000"
  p2pPortName: p2p

externalLB: false
externalLBIP: ""
externalLBSourceRanges: {}
#  - 203.0.113.2/32
#  - 203.0.113.3/32

externalLBp2p: false
externalLBp2pIP: ""
internalLB: false
internalLBIP: ""

persistence:
  enabled: true
  storageClass: "ssd"
  accessMode: ReadWriteOnce
  size: "200Gi"

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    cpu: "1000m"
    memory: "3000Mi"
  limits:
    cpu: "3000m"
    memory: "6000Mi"

# magic numbers are from tezos docker base image
# https://gitlab.com/tezos/opam-repository/-/blob/master/minimal.Dockerfile
securityContext:
  runAsUser: 100
  runAsGroup: 65533
  fsGroup: 65533

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: "tezos"
          topologyKey: failure-domain.beta.kubernetes.io/zone

tezos:
  base_path: "/var/run/tezos"
  # possible values  are sandbox, mainnet, carthagenet
  network: "mainnet"

  chain_id: "main"
  # possible values are archive, full and experimental-rolling
  history_mode: "archive"
  # how many seconds should liveness check wait for a new block.
  maxHealthyAge: 3600

# enable this to run tezos-upgrade-storage as init container
tezos_upgrade_storage: false

livenessProbe:
  initialDelaySeconds: 600
  periodSeconds: 600
  timeoutSeconds: 500
  successThreshold: 1
  failureThreshold: 2
